{"ast":null,"code":"var _jsxFileName = \"/home/dejan/PycharmProjects/drriven-test2/frontend/src/components/Posts.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Posts.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Check if cookie string begins with the name we want\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8000/api/posts/', {\n      credentials: 'include'\n    }).then(response => response.json()).then(data => setPosts(data)).catch(error => console.error('Error fetching posts:', error));\n  }, []);\n  const toggleLike = postId => {\n    const csrftoken = getCookie('csrftoken');\n    fetch(`http://localhost:8000/api/posts/${postId}/toggle_like/`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'X-CSRFToken': csrftoken,\n        // Include CSRF token here\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      // Update the post in the posts array with new like count and liked status\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        likes_count: data.likes_count,\n        liked: data.liked\n      } : post));\n    }).catch(error => console.error('Error toggling like:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.subject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Likes: \", post.likes_count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleLike(post.id),\n        children: post.liked ? 'Unlike' : 'Like'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","Posts","_s","posts","setPosts","fetch","credentials","then","response","json","data","catch","error","console","toggleLike","postId","csrftoken","method","headers","prevPosts","map","post","id","likes_count","liked","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","padding","marginBottom","subject","description","onClick","_c","$RefreshReg$"],"sources":["/home/dejan/PycharmProjects/drriven-test2/frontend/src/components/Posts.js"],"sourcesContent":["// frontend/src/components/Posts.js\nimport React, { useState, useEffect } from 'react';\n\nfunction getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Check if cookie string begins with the name we want\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nfunction Posts() {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:8000/api/posts/', {\n      credentials: 'include'\n    })\n      .then(response => response.json())\n      .then(data => setPosts(data))\n      .catch(error => console.error('Error fetching posts:', error));\n  }, []);\n\n  const toggleLike = (postId) => {\n    const csrftoken = getCookie('csrftoken');\n    fetch(`http://localhost:8000/api/posts/${postId}/toggle_like/`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'X-CSRFToken': csrftoken,  // Include CSRF token here\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then(data => {\n        // Update the post in the posts array with new like count and liked status\n        setPosts(prevPosts =>\n          prevPosts.map(post =>\n            post.id === postId\n              ? { ...post, likes_count: data.likes_count, liked: data.liked }\n              : post\n          )\n        );\n      })\n      .catch(error => console.error('Error toggling like:', error));\n  };\n\n  return (\n    <div>\n      <h1>Posts</h1>\n      {posts.map(post => (\n        <div key={post.id} style={{ border: '1px solid #ccc', padding: '10px', marginBottom: '10px' }}>\n          <h2>{post.subject}</h2>\n          <p>{post.description}</p>\n          <p>Likes: {post.likes_count}</p>\n          <button onClick={() => toggleLike(post.id)}>\n            {post.liked ? 'Unlike' : 'Like'}\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Posts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}