{"ast":null,"code":"var _jsxFileName = \"/home/dejan/PycharmProjects/drriven-test2/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport DataPage from './components/DataPage';\nimport Posts from './components/Posts';\nimport Login from './components/Login';\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('access_token'));\n\n  // Optionally, on app load, if token exists, fetch current user info\n  useEffect(() => {\n    if (token) {\n      fetch('http://localhost:8000/api/current_user/', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        if (data.username) {\n          setCurrentUser({\n            username: data.username\n          });\n        } else {\n          setCurrentUser(null);\n        }\n      }).catch(error => console.error(\"Error fetching current user:\", error));\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      currentUser: currentUser,\n      setCurrentUser: setCurrentUser,\n      setToken: setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/data\",\n        element: /*#__PURE__*/_jsxDEV(DataPage, {\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts\",\n        element: /*#__PURE__*/_jsxDEV(Posts, {\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          setCurrentUser: setCurrentUser,\n          setToken: setToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2rWF0Hxnz5/9LQKlwb8cddI6+04=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Home","DataPage","Posts","Login","Header","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","token","setToken","localStorage","getItem","fetch","headers","then","response","json","data","username","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/home/dejan/PycharmProjects/drriven-test2/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport DataPage from './components/DataPage';\nimport Posts from './components/Posts';\nimport Login from './components/Login';\nimport Header from './components/Header';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('access_token'));\n\n  // Optionally, on app load, if token exists, fetch current user info\n  useEffect(() => {\n    if (token) {\n      fetch('http://localhost:8000/api/current_user/', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      })\n        .then(response => response.json())\n        .then(data => {\n          if (data.username) {\n            setCurrentUser({ username: data.username });\n          } else {\n            setCurrentUser(null);\n          }\n        })\n        .catch(error => console.error(\"Error fetching current user:\", error));\n    }\n  }, [token]);\n\n  return (\n    <Router>\n      <Header currentUser={currentUser} setCurrentUser={setCurrentUser} setToken={setToken} />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/data\" element={<DataPage token={token} />} />\n        <Route path=\"/posts\" element={<Posts token={token} />} />\n        <Route path=\"/login\" element={<Login setCurrentUser={setCurrentUser} setToken={setToken} />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}